---
apiVersion: v1
kind: ConfigMap
metadata:
  name: fluentdconf
  # namespace: kube-system
  namespace: default
data:
  fluent.conf: |
    <match fluent.**>
      @type null
    </match>

    <source>
      @type tail
      path /var/log/containers/*.log
      pos_file /var/log/fluentd-containers.log.pos
      time_format %Y-%m-%dT%H:%M:%S.%NZ
      tag kubernetes.*
      format json
      read_from_head true
    </source>

    <filter kubernetes.**>
      @type kubernetes_metadata
    </filter>

    <match kubernetes.var.log.containers.**fluentd**.log>
      @type null
    </match>

    <match kubernetes.var.log.containers.**kube-system**.log>
      @type null
    </match>

    <match kubernetes.**>
      @type stdout
    </match>
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: fluentd
  # namespace: kube-system
  namespace: default
  labels:
    k8s-app: fluentd-logging
    version: v1
    kubernetes.io/cluster-service: "true"
spec:
  template:
    metadata:
      labels:
        k8s-app: fluentd-logging
        version: v1
        kubernetes.io/cluster-service: "true"
    spec:
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      containers:
      - name: fluentd
        image: fluent/fluentd-kubernetes-daemonset:v0.12-alpine-elasticsearch
        resources:
          limits:
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
        - name: fluentconfig
          mountPath: /fluentd/etc/
        - name: varlog
          mountPath: /var/log
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
      terminationGracePeriodSeconds: 30
      volumes:
      - name: fluentconfig
        configMap:
          name: fluentdconf
      - name: varlog
        persistentVolumeClaim:
          claimName: nfs
        # hostPath:
        #   path: /var/log
      - name: varlibdockercontainers
        persistentVolumeClaim:
          claimName: nfs
        # hostPath:
        #   path: /var/lib/docker/containers


      #   volumeMounts:
      #     # name must match the volume name below
      #     - name: my-pvc-nfs
      #       mountPath: "/mnt"
      # volumes:
      # - name: my-pvc-nfs
      #   persistentVolumeClaim:
      #     claimName: nfs
